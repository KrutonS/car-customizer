/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useLerp } from "../../utils/hooks";
import { Color } from "three";

export default function CarModel({ hex, ...props }) {
  const group = useRef();
  const { nodes, materials } = useGLTF("/car.gltf");

  const bodyMaterial = materials.Body;
  const initialCol = useRef(bodyMaterial.color);
	const targetCol = new Color(hex);
  const color = useLerp(initialCol.current, targetCol);

  bodyMaterial.color = color;

  // const spotlightL = useRef();
	// const spotlightR = useRef();
	// const lightColor = materials['Front Lights'].color;

	// useLayoutEffect(() => {
  //   spotlightL.current.target.position.x = 2;
  //   spotlightL.current.target.position.y = 3.8;
  //   spotlightL.current.target.position.z = 10;

  //   spotlightR.current.target.position.x = -2;
  //   spotlightR.current.target.position.y = 3.8;
  //   spotlightR.current.target.position.z = 10;
  // });
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.Mesh007.geometry} material={bodyMaterial} />
        <mesh geometry={nodes.Mesh007_1.geometry} material={materials.Glass} />
        <mesh geometry={nodes.Mesh007_2.geometry} material={materials["Front Lights"]}
        />
        <mesh geometry={nodes.Mesh007_3.geometry} material={materials["Back Lights"]}
        />
        <mesh geometry={nodes.Mesh007_4.geometry} material={materials.Black} />
        <mesh geometry={nodes.Mesh007_5.geometry} material={materials.FrontColor}
        />

        {/* <SpotLight
          distance={5}
          angle={0.15}
          attenuation={5}
          anglePower={5}
          ref={spotlightL}
          position={[2, 8, -3.8]} color={lightColor}
        />
        <SpotLight
          distance={5}
          angle={0.15}
          attenuation={5}
          anglePower={5}
          ref={spotlightR}
          position={[-2, 8, -3.8]} color={lightColor}
        /> */}
      </group>
    </group>
  );
}

useGLTF.preload("/car.gltf");
